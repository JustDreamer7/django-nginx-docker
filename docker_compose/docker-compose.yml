version: '3'
services:
  db:
    image: "postgres:${POSTGRES_VERSION}"
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "pg_isready","-d" , "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5


  django_movies:
    build: app
    expose:
      - "8000"
    command: 'gunicorn config.wsgi:application --bind 0.0.0.0:8000'
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
      - template_volume:/opt/app/data
    env_file:
      - app/config/.env

  nginx:
    image: "nginx:${NGINX_VERSION}"
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
      - template_volume:/opt/app/data
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/etc/nginx/conf.d:ro

    depends_on:
      django_movies:
        condition: service_started
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    env_file:
      - .env
volumes:
 postgres_data:
 template_volume:
 static_volume:
 media_volume:
